<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="JBBPExternalValueProvider.java"><comment type="block">/* 
 * Copyright 2014 Igor Maznitsa (http://www.igormaznitsa.com).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name>com</name>.<name>igormaznitsa</name>.<name>jbbp</name>;</package>

<import>import <name>com</name>.<name>igormaznitsa</name>.<name>jbbp</name>.<name>compiler</name>.<name>JBBPCompiledBlock</name>;</import>

<comment type="javadoc">/**
 * The Interface describes a provider which can provide numeric size for decoded arrays by their names.
 * @since 1.0
 */</comment>
<class type="interface"><specifier>public</specifier> interface <name>JBBPExternalValueProvider</name> <block>{
  <comment type="javadoc">/**
   * Get an array size.
   * @param fieldName the field name of the array
   * @param numericFieldMap the numeric field map contains information about already read fields
   * @param compiledBlock the compiled block for the script to provide extra information
   * @return the size of an array
   */</comment>
  <function_decl><type><name>int</name></type> <name>provideArraySize</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name>String</name></type> <name>fieldName</name></decl></param>, <param><decl><type><specifier>final</specifier> <name>JBBPNamedNumericFieldMap</name></type> <name>numericFieldMap</name></decl></param>, <param><decl><type><specifier>final</specifier> <name>JBBPCompiledBlock</name></type> <name>compiledBlock</name></decl></param>)</parameter_list>;</function_decl>
}</block></class>
</unit>
